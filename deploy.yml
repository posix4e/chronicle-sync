---
- name: Deploy Node.js App
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    deployment_date: "{{ ansible_date_time.date }}"
    deployment_id: "{{ lookup('env', 'GITHUB_RUN_ID') | default(ansible_date_time.epoch) }}"
    project_dir: "/tmp/deploy/{{ deployment_date }}/bntd/{{ deployment_id }}"
    # Adjust the port to the one your Node app listens on
    node_app_port: 3000

  tasks:
    - name: Create deployment directory
      file:
        path: "{{ project_dir }}"
        state: directory
        mode: '0755'

    - name: Sync code to deployment directory
      synchronize:
        src: "{{ playbook_dir }}/"
        dest: "{{ project_dir }}"
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=node_modules"
          - "--exclude=__pycache__"

    - name: Install Node.js and npm (Debian/Ubuntu)
      apt:
        name:
          - nodejs
          - npm
        state: present
        update_cache: yes
      become: yes

    - name: Install project dependencies (npm install)
      command: npm install
      args:
        chdir: "{{ project_dir }}"

    - name: Build web application
      command: npm run build:web
      args:
        chdir: "{{ project_dir }}"

    - name: Copy Node.js service file
      template:
        src: node.service.j2
        dest: /etc/systemd/system/node.service
        mode: "0644"
      become: yes

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
      become: yes

    - name: Start and enable Node.js service
      systemd:
        name: node
        state: restarted
        enabled: yes
      become: yes

    - name: Wait for Node.js to be up
      wait_for:
        host: 127.0.0.1
        port: "{{ node_app_port }}"
        timeout: 30

    - name: Check health endpoint
      uri:
        url: "http://127.0.0.1:{{ node_app_port }}/"
        return_content: yes
      register: health_check
      retries: 3
      delay: 5
      until: health_check.status == 200

