name: Release

on:
  release:
    types: [created]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: |
          npm run build:chrome
          npm run build:firefox
          npm run build:web

      - name: Validate Chrome extension
        run: |
          cd apps/chrome/dist
          # Check if manifest.json exists and is valid JSON
          if ! [ -f manifest.json ]; then
            echo "Error: manifest.json not found"
            exit 1
          fi
          if ! jq empty manifest.json; then
            echo "Error: manifest.json is not valid JSON"
            exit 1
          fi
          # Check for required files
          for file in background.js popup.js popup.html; do
            if ! [ -f "$file" ]; then
              echo "Error: Required file $file not found"
              exit 1
            fi
          done
          # Check icons directory
          if ! [ -d icons ] || ! [ -f icons/icon16.png ] || ! [ -f icons/icon48.png ] || ! [ -f icons/icon128.png ]; then
            echo "Error: Missing required icons"
            exit 1
          fi

      - name: Create Chrome extension package
        run: |
          cd apps/chrome/dist
          zip -r ../../../chronicle-sync-chrome.zip .

      - name: Create Firefox extension package
        run: |
          cd apps/firefox/dist
          zip -r ../../../chronicle-sync-firefox.zip .

      - name: Upload Chrome extension
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./chronicle-sync-chrome.zip
          asset_name: chronicle-sync-chrome.zip
          asset_content_type: application/zip

      - name: Upload Firefox extension
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./chronicle-sync-firefox.zip
          asset_name: chronicle-sync-firefox.zip
          asset_content_type: application/zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy web interface
        run: |
          cd apps/web
          aws s3 sync dist/ s3://chronicle-sync-web/ --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
